- content_for(:page, 'home')

.grid.grid-rows-auto.gap-4.grid-cols-1.lg:grid-cols-2.xl:grid-cols-3
  .flex.space-x-4
    - unless @balance.blank?
      .px-4.py-2.flex.flex-col.flex-1.bg-green-400.shadow.rounded-md.text-white
        .flex.items-center
          %i.fa.fa-shopping-cart.fa-lg
          %p.text-base.font-bold.leading-normal.ml-4
            = I18n.t('activerecord.models.checkout_balance')
        %p.text-5xl.font-bold.leading-10.mt-4
          = number_to_currency( @balance.balance, :unit => '€' )

      .px-4.py-2.flex.flex-col.flex-1.bg-yellow-400.shadow.rounded-md.text-white
        .flex.items-center
          %i.fa.fa-money-bill-wave.fa-lg
          %p.text-base.font-bold.leading-normal.ml-4
            = I18n.t('members.home.index.outstanding_payments')
        %p.text-5xl.font-bold.leading-10.mt-4
          = number_to_currency( @debt, :unit => '€' )

    - if @member.groups.any?
      .widget
        .card
          .card-header
            %i.fa.fa-fw.fa-users
            = I18n.t('activerecord.models.group')
          %table.table.table-striped
            %tbody
              - @member.groups.each do |group|
                %tr
                  %td
                    %strong
                      = group[ :name ]
                  %td= Date.years( group[ :years ].sort )

                  %td
                    - group[ :positions ].each do | position |
                      - position.each do | position, year |
                        - unless position.nil?
                          %span{:class => year == Date.today.study_year ? "font-weight-bold" : ""}=                          |
                            I18n.t(position, scope: 'activerecord.attributes.group.positions', default: position.capitalize) |


  .card.row-span-2
    .card-header
      %span
        %i.fa.fa-fw.fa-fw.fa-ticket-alt
        = I18n.t("navigation.activity")
        = select_tag :year, options_for_select( @years), class: 'year-selector'
    %table.table.table-striped
      %tbody
        - @participants.each do |activity|
          %tr{ :class => ('red' unless activity.currency(@member).nil? || activity.currency(@member) == 0 || activity.participants.where(:member => @member).first.paid)}
            - if !activity.ended?
              %td= link_to activity.name, activity_path(activity)
            - else
              %td= activity.name

            - if !activity.start_date.nil?
              %td.hidden-xs
                - if activity.end_date.nil?
                  = I18n.l activity.start_date
                - else
                  #{I18n.l activity.start_date} - #{I18n.l activity.end_date}
            - if !activity.currency(@member).nil?
              %td= number_to_currency(activity.currency(@member), :unit => '€')
            - else
              %tdl
            %td.text-center.d-none.d-sm-block
              - if !activity.currency(@member).nil? && activity.currency(@member) > 0
                - if activity.participants.where(:member => @member).first.paid
                  %span.label.label-success= I18n.t('activerecord.attributes.participant.paid.true')
                - else
                  %span.label.label-warning= I18n.t('activerecord.attributes.participant.paid.false')
  .card
    .card-header
      %i.fa.fa-fw.fa-fw.fa-shopping-cart
      %span= I18n.t("activerecord.models.checkout_transactions")
    %table.table.table-striped
      %tbody
        - @transactions.each do |transaction|
          %tr
            %td.d-block.d-sm-none{ :colspan => 2 }= I18n.l transaction.created_at
            %td.d-none.d-sm-table-cell= I18n.l transaction.created_at
            %td.d-none.d-sm-table-cell= transaction.products
            %td
              = number_to_currency(transaction.price, :unit => '€')
              - if transaction.price > 0
                %span.fa.fa-sort-asc.float-right
              - else
                %span.fa.fa-sort-desc.float-right
